rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Events rules
    match /events/{eventId} {
      allow read: if true;  // Allow public read access
      allow write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // Driveways rules
    match /driveways/{drivewayId} {
      allow read: if true;  // Allow public read access
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isOwner(resource.data.ownerId);
    }

    // Parking spots rules
    match /parkingSpots/{spotId} {
      allow read: if true;  // Allow public read access
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isOwner(resource.data.ownerId);
    }

    // User profiles rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 